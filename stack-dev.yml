version: "3.8"

volumes:
  database:
    external: true
    name: "rinnegan-database-volume"
  queue:
    external: true
    name: "rinnegan-queue-volume"
  registry:
    external: true
    name: "rinnegan-registry-volume"
  streaming:
    external: true
    name: "rinnegan-streaming-volume"

networks:
  database:
    external: true
    name: "rinnegan-database-network"
  backend:
    external: true
    name: "rinnegan-backend-network"
  queue:
    external: true
    name: "rinnegan-queue-network"
  registry:
    external: true
    name: "rinnegan-registry-network"
  streaming:
    external: true
    name: "rinnegan-streaming-network"
  nginx:
    external: true
    name: "rinnegan-nginx-network"

secrets:
  database-password:
    external: true
  database-user:
    external: true
  backend-secret-key:
    external: true
  backend-database-string:
    external: true
  backend-test-database-string:
    external: true
  backend-redis-string:
    external: true
  backend-twitter-consumer-key:
    external: true
  backend-twitter-consumer-secret:
    external: true
  backend-twitter-post-limit:
    external: true
  backend-cloud-vendor:
    external: true
  backend-aws-access-key-id:
    external: true
  backend-aws-secret-access-key:
    external: true
  backend-s3-bucket:
    external: true
  backend-monkeylearn-api-token:
    external: true
  backend-monkeylearn-model-id:
    external: true
  backend-streaming-string:
    external: true
  backend-streaming-auth-source:
    external: true
  backend-streaming-database:
    external: true
  backend-streaming-collection:
    external: true
  streaming-database-user:
    external: true
  streaming-database-password:
    external: true
  streaming-database-root-user:
    external: true
  streaming-database-root-password:
    external: true

services:
  visualizer:
    image: dockersamples/visualizer
    stop_grace_period: 20s
    networks:
      - registry
    ports:
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  registry:
    image: onlinejudge95/rinnegan-registry:1
    networks:
      - registry
    ports:
      - 6000:5000
    volumes:
      - registry:/var/lib/registry

  postgres:
    image: localhost:6000/rinnegan-postgres:latest
    depends_on:
      - registry
    networks:
      - database
      - registry
    secrets:
      - database-password
      - database-user
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/database-password
      POSTGRES_USER_FILE: /run/secrets/database-user

  redis:
    image: localhost:6000/rinnegan-redis:latest
    depends_on:
      - registry
    networks:
      - queue
      - registry
    ports:
      - 6379:6379
    env_file:
      - .secrets.queue
    volumes:
      - queue:/data

  mongo:
    image: localhost:6000/rinnegan-mongo:latest
    depends_on:
      - registry
    networks:
      - streaming
      - registry
    ports:
      - 27017:27017
    secrets:
      - streaming-database-root-user
      - streaming-database-root-password
      - streaming-database-user
      - streaming-database-password
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/streaming-database-root-user
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/streaming-database-root-password
      MONGO_INITDB_USERNAME_FILE: /run/secrets/streaming-database-user
      MONGO_INITDB_PASSWORD_FILE: /run/secrets/streaming-database-password
      MONGO_INITDB_DATABASE: rinnegan
    volumes:
      - streaming:/data/db

  nginx:
    image: localhost:6000/rinnegan-nginx:latest
    depends_on:
      - flask
      - worker
    networks:
      - registry
      - nginx
    ports:
      - 80:80

  flask:
    image: localhost:6000/rinnegan-flask:latest
    depends_on:
      - postgres
      - registry
    networks:
      - backend
      - database
      - queue
      - registry
      - streaming
      - nginx
    ports:
      - 5000:5000
    secrets:
      - backend-secret-key
      - backend-redis-string
      - backend-database-string
      - backend-test-database-string
      - backend-twitter-consumer-key
      - backend-twitter-consumer-secret
      - backend-twitter-post-limit
      - backend-cloud-vendor
      - backend-aws-access-key-id
      - backend-aws-secret-access-key
      - backend-s3-bucket
      - backend-monkeylearn-api-token
      - backend-monkeylearn-model-id
      - backend-streaming-string
      - backend-streaming-auth-source
      - backend-streaming-database
      - backend-streaming-collection
    environment:
      FLASK_APP: manage:app
      NODE_TYPE: server
      FLASK_ENV: development
      SECRET_KEY_FILE: /run/secrets/backend-secret-key
      REDIS_URL_FILE: /run/secrets/backend-redis-string
      DATABASE_URL_FILE: /run/secrets/backend-database-string
      TWITTER_CONSUMER_KEY_FILE: /run/secrets/backend-twitter-consumer-key
      TWITTER_CONSUMER_SECRET_FILE: /run/secrets/backend-twitter-consumer-secret
      TWITTER_POST_LIMITS_FILE: /run/secrets/backend-twitter-post-limit
      CLOUD_VENDOR_FILE: /run/secrets/backend-cloud-vendor
      AWS_ACCESS_KEY_ID_FILE: /run/secrets/backend-aws-access-key-id
      AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backend-aws-secret-access-key
      S3_BUCKET_FILE: /run/secrets/backend-s3-bucket
      MONKEYLEARN_API_TOKEN_FILE: /run/secrets/backend-monkeylearn-api-token
      MONKEYLEARN_MODEL_ID_FILE: /run/secrets/backend-monkeylearn-model-id
      MONGO_URI_FILE: /run/secrets/backend-streaming-host
      MONGO_AUTH_SOURCE_FILE: /run/secrets/backend-streaming-auth-source
      MONGO_MODEL_COLLECTION_FILE: /run/secrets/backend-streaming-collection
      MONGO_DATABASE_FILE: /run/secrets/backend-streaming-database
      DATABASE_TEST_URL_FILE: DUMMY_TEST_URL
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

  worker:
    image: localhost:6000/rinnegan-flask:latest
    depends_on:
      - redis
      - registry
    networks:
      - database
      - backend
      - queue
      - registry
      - streaming
    ports:
      - 8001:5000
    secrets:
      - backend-secret-key
      - backend-redis-string
      - backend-database-string
      - backend-test-database-string
      - backend-twitter-consumer-key
      - backend-twitter-consumer-secret
      - backend-twitter-post-limit
      - backend-cloud-vendor
      - backend-aws-access-key-id
      - backend-aws-secret-access-key
      - backend-s3-bucket
      - backend-monkeylearn-api-token
      - backend-monkeylearn-model-id
      - backend-streaming-string
      - backend-streaming-auth-source
      - backend-streaming-database
      - backend-streaming-collection
    environment:
      FLASK_APP: manage:app
      NODE_TYPE: worker
      FLASK_ENV: development
      SECRET_KEY_FILE: /run/secrets/backend-secret-key
      REDIS_URL_FILE: /run/secrets/backend-redis-string
      DATABASE_URL_FILE: /run/secrets/backend-database-string
      TWITTER_CONSUMER_KEY_FILE: /run/secrets/backend-twitter-consumer-key
      TWITTER_CONSUMER_SECRET_FILE: /run/secrets/backend-twitter-consumer-secret
      TWITTER_POST_LIMITS_FILE: /run/secrets/backend-twitter-post-limit
      CLOUD_VENDOR_FILE: /run/secrets/backend-cloud-vendor
      AWS_ACCESS_KEY_ID_FILE: /run/secrets/backend-aws-access-key-id
      AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backend-aws-secret-access-key
      S3_BUCKET_FILE: /run/secrets/backend-s3-bucket
      MONKEYLEARN_API_TOKEN_FILE: /run/secrets/backend-monkeylearn-api-token
      MONKEYLEARN_MODEL_ID_FILE: /run/secrets/backend-monkeylearn-model-id
      MONGO_URI_FILE: /run/secrets/backend-streaming-string
      MONGO_AUTH_SOURCE_FILE: /run/secrets/backend-streaming-auth-source
      MONGO_DATABASE_FILE: /run/secrets/backend-streaming-database
      MONGO_MODEL_COLLECTION_FILE: /run/secrets/backend-streaming-collection
      DATABASE_TEST_URL_FILE: DUMMY_TEST_URL
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

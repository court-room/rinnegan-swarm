version: "3.8"

volumes:
  data:
    external: true
    name: "rinnegan-database-volume"
  queue:
    external: true
    name: "rinnegan-queue-volume"
  streaming-data:
    external: true
    name: rinnegan-streaming-data

networks:
  database:
    external: true
    name: "rinnegan-database-network"
  backend:
    external: true
    name: "rinnegan-backend-network"
  queue:
    external: true
    name: "rinnegan-queue-network"
  streaming:
    external: true
    name: "rinnegan-queue-network"

secrets:
  database-password:
    external: true
  database-user:
    external: true
  backend-secret-key:
    external: true
  backend-database-string:
    external: true
  backend-test-database-string:
    external: true
  streaming-database-password:
    external: true
  streaming-database-user:
    external: true

services:
  postgres:
    image: onlinejudge95/rinnegan-postgres:1
    networks:
      - database
    ports:
      - 5432
    secrets:
      - database-password
      - database-user
    volumes:
      - data:/var/lib/postgresql/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.type == datastore
      resources:
        limits:
          memory: 200M
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/database-password
      POSTGRES_USER_FILE: /run/secrets/database-user

  flask:
    image: onlinejudge95/rinnegan-flask
    depends_on:
      - postgres
    networks:
      - backend
      - database
      - queue
      - streaming
    ports:
      - 5000:5000
    secrets:
      - backend-secret-key
      - backend-database-string
      - backend-test-database-string
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
          - node.labels.type != datastore
          - node.labels.type != queue
      resources:
        limits:
          memory: 200M
    environment:
      FLASK_APP: manage:app
      FLASK_ENV: production
      SECRET_KEY_FILE: /run/secrets/backend-secret-key
      DATABASE_URL_FILE: /run/secrets/backend-database-string
      DATABASE_TEST_URL_FILE: DUMMY_TEST_URL
      STAGE: prod
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

  redis:
    image: onlinejudge95/rinnegan-redis
    networks:
      - queue
    ports:
      - 6379
    volumes:
      - queue:/data
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role == worker
          - node.labels.type != datastore
      resources:
        limits:
          memory: 200M

  worker:
    image: onlinejudge95/rinnegan-worker
    depends_on:
      - queue
    networks:
      - queue
      - streaming
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 2
        constraints:
          - node.role == worker
          - node.labels.type != datastore
          - node.labels.type != queue
      resources:
        limits:
          memory: 200M

  mongo:
    image: onlinejudge95/rinnegan-mongo
    depends_on:
      - flask
    networks:
      - streaming
    ports:
      - 27017
    secrets:
      - streaming-database-password
      - streaming-database-user
    volumes:
      - streaming-data:/data/db
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.role == worker
          - node.labels.type == datastore
      resources:
        limits:
          memory: 200M
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/streaming-database-user
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/streaming-database-password

  visualizer:
    image: dockersamples/visualizer
    stop_grace_period: 20s
    networks:
      - backend
    ports:
      - 80:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
